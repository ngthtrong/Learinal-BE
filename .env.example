########################################
# Learinal-BE .env.example
# Copy to .env and fill in secrets for local/dev
########################################

# ===== Server =====
PORT=3000
NODE_ENV=development

# ===== MongoDB =====
MONGO_URI=mongodb://localhost:27017/learinal
MONGO_DB_NAME=learinal

# ===== Redis / Queue =====
# If you run Redis locally: redis://localhost:6379
REDIS_URL=
# Enable background jobs when Redis is configured ("1" or "true")
USE_QUEUE=1

# ===== JWT Auth =====
JWT_SECRET=change-me-access-secret
JWT_EXPIRES_IN=1h
JWT_REFRESH_SECRET=change-me-refresh-secret
JWT_REFRESH_EXPIRES_IN=7d

# Require email verification before allowing local login
REQUIRE_EMAIL_VERIFIED_FOR_LOGIN=true

# Email verification / password reset token signing
EMAIL_VERIFY_SECRET=change-me-email-verify
EMAIL_VERIFY_EXPIRES_IN=2d
PASSWORD_RESET_SECRET=change-me-password-reset
PASSWORD_RESET_EXPIRES_IN=1h

# Frontend (or app) base URL used in links
APP_BASE_URL=http://localhost:3000

# ===== Google OAuth (Real) =====
# Create OAuth client in Google Cloud Console and add Authorized redirect URIs
# For the built-in test pages served by the backend, use:
#   http://localhost:${PORT}/oauth/google/callback  (e.g., http://localhost:3000/oauth/google/callback)
GOOGLE_CLIENT_ID=
GOOGLE_CLIENT_SECRET=
GOOGLE_REDIRECT_URI=http://localhost:3000/oauth/google/callback

# ===== OAuth hardening =====
# Require state check on OAuth callback (recommended: true)
OAUTH_REQUIRE_STATE=true
# Require PKCE (set true for SPA/public clients; optional for server-side exchange)
OAUTH_REQUIRE_PKCE=false

# ===== Auth cookies (used for refresh token cookie) =====
# Local dev: keep false; Production over HTTPS: set true and configure COOKIE_DOMAIN
COOKIE_SECURE=false
COOKIE_SAMESITE=Lax
# COOKIE_DOMAIN=yourdomain.com

# ===== CORS whitelist (comma-separated origins). Empty = allow all (dev only) =====
CORS_ALLOWED_ORIGINS=http://localhost:3000,http://localhost:3001

# ===== Email provider config =====
# Choose one provider. Default: sendgrid
EMAIL_PROVIDER=sendgrid
# SendGrid
SENDGRID_API_KEY=
EMAIL_FROM=no-reply@learinal.app
# Optional dynamic template IDs (SendGrid):
# EMAIL_VERIFY_TEMPLATE_ID=
# PASSWORD_RESET_TEMPLATE_ID=

# ===== LLM (Gemini) =====
GEMINI_API_KEY=
GEMINI_MODEL=gemini-2.5-flash
LLM_TIMEOUT_MS=30000
LLM_RETRIES=2

# ===== Storage =====
# Local storage by default; implement S3/Cloudinary as needed
STORAGE_MODE=local
# S3 (optional)
S3_BUCKET=
S3_REGION=
# Cloudinary (optional)
# CLOUDINARY_URL=

# ===== Stripe (optional) =====
STRIPE_SECRET_KEY=
STRIPE_WEBHOOK_SECRET=

# ===== Modes / Feature flags =====
LLM_MODE=stub/real
QUEUE_MODE=stub/real
STORAGE_MODE=local
PAYMENT_MODE=stub/real
DB_MODE=mongo

# ===== Logging =====
LOG_LEVEL=debug

########################################
# Notes
# - Do not commit real secrets. Keep this file as an example only.
# - For production, set COOKIE_SECURE=true, configure COOKIE_DOMAIN, and restrict CORS_ALLOWED_ORIGINS.
# - Add your Google redirect URI to the OAuth client in Google Cloud Console.
########################################

